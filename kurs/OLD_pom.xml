<?xml version="1.0" encoding="UTF-8"?>

<!--
    Copyright (C) 2023 - present Juergen Zimmermann, Hochschule Karlsruhe

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program. If not, see <https://www.gnu.org/licenses/>.
-->

<!--
    Aufrufe:

    1) Microservice uebersetzen und starten
        .\mvnw compile
        .\mvnw test-compile
        .\mvnw test-compile -P docker-compose
        .\mvnw spring-boot:run
        .\mvnw spring-boot:run -P \!tracing
        .\mvnw -debug spring-boot:run -P !tracing
        .\mvnw clean

    2) Microservice als selbstausfuehrendes JAR oder Docker-Image erstellen und ausfuehren
        .\mvnw package spring-boot:repackage -D'maven.test.skip=true' -D'spring-boot.build-image.skip=true'
            ${project.build.directory}/kunde-...jar

            java -\-enable-preview -jar .\target\kunde-...jar `
                -\-spring.profiles.active=dev `
                -\-spring.ssl.bundle.pem.microservice.keystore.private-key=src/main/resources/private-key.pem `
                -\-spring.ssl.bundle.pem.microservice.keystore.certificate=src/main/resources/certificate.crt `
                -\-spring.ssl.bundle.pem.microservice.truststore.certificate=src/main/resources/certificate.crt

        .\mvnw spring-boot:build-image -D'maven.test.skip=true'
            .\mvnw help:describe -D'plugin=org.springframework.boot:spring-boot-maven-plugin' -Ddetail

    3) Tests
        .\mvnw test jacoco:report
            ${project.build.directory}/site/jacoco/*.html
        .\mvnw test -Dtest=KundeGetRestTest

    4) Codeanalyse: Checkstyle, SpotBugs, Spotless, Modernizer, SonarQube
        .\mvnw checkstyle:checkstyle spotbugs:check spotless:check modernizer:modernizer jxr:jxr
            ${project.build.directory}
        .\mvnw sonar:sonar

    5) Sicherheitsueberpruefung durch OWASP Dependency Check
        .\mvnw dependency-check:check
            ${project.build.directory}/dependency-check-report.html

    6) Javadoc
        .\mvnw compile javadoc:javadoc
            ${project.build.directory}/site/apidocs

    7) Projektreport erstellen
        .\mvnw site -D'maven.test.skip=true'
            ${project.build.directory}/site/project-info.html
            einschl. JUnit, JaCoCo, Checkstyle, SpotBugs, Spotless, DependencyCheck, Javadoc

    8) Projekthandbuch erstellen
        .\mvnw asciidoctor:process-asciidoc asciidoctor:process-asciidoc@pdf -Pasciidoctor
            ${project.build.directory}/generated-docs

    9) "Dependencies Updates"
        .\mvnw versions:display-dependency-updates
        .\mvnw versions:display-plugin-updates

    10) Sources und Javadoc herunterladen
        .\mvnw dependency:sources
        .\mvnw dependency:resolve -Dclassifier=javadoc

    11) Abhaengigkeitsgraph
        .\mvnw dependency:tree
        .\mvnw dependency:resolve-plugins

    12) Effective POM
        .\mvnw org.apache.maven.plugins:maven-help-plugin:effective-pom > effective-pom.xml
        .\mvnw help:effective-pom > effective-pom.xml

    13) Versionen von Java und Maven ueberpruefen
        .\mvnw enforcer:enforce
-->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.acme</groupId>
    <artifactId>kurs</artifactId>
    <version>2024.04.0</version>
    <packaging>jar</packaging>

    <name>kurs</name>
    <description>Beispielprojekt fuer Softwarearchitektur</description>
    <url>${project.organization.url}</url>
    <inceptionYear>2016</inceptionYear>
    <organization>
        <name>Hochschule Karlsruhe</name>
        <url>https://www.h-ka.de</url>
    </organization>
    <licenses>
        <license>
            <name>GPL v3</name>
            <url>https://www.gnu.org/licenses/gpl-3.0.html.en</url>
        </license>
    </licenses>
    <scm>
        <developerConnection>scm:git:https://github.com/acme/kurs.git</developerConnection>
        <connection>scm:git:https://github.com/acme/kurs.git</connection>
        <url>https://github.com/acme/kurs</url>
        <tag>HEAD</tag>
    </scm>
    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/acme/kurs/issues</url>
    </issueManagement>
    <developers>
        <developer>
            <name>Juergen Zimmermann</name>
            <email>Juergen.Zimmermann@h-ka.de</email>
            <roles>
                <role>Dozent</role>
            </roles>
        </developer>
    </developers>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.0-M3</version>
        <relativePath/>
    </parent>

    <properties>
        <!-- ${env:USERPROFILE}/.m2/settings.xml -->
        <!-- <nvd.api.key>...</nvd.api.key> -->
        <!-- <sonar.token>...</sonar.token> -->

        <!-- <java.version>22</java.version> -->
        <java.version>21</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <enable.preview>--enable-preview</enable.preview>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <image.base>buildpacks</image.base>
        <!-- <image.base>azul</image.base> -->
        <image.name>juergenzimmermann/${project.name}:${project.version}-${image.base}</image.name>

        <spring-boot.run.jvmArguments>${enable.preview}</spring-boot.run.jvmArguments>
        <!-- Surefire und JaCoCo -->
        <argLine/>
        <!-- <log-level-test>DEBUG</log-level-test> -->
        <log-level-test>INFO</log-level-test>

        <annotations.version>24.1.0</annotations.version>
        <bouncycastle.version>1.78</bouncycastle.version>
        <jansi.version>2.4.1</jansi.version>
        <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
        <mapstruct.version>1.6.0.Beta1</mapstruct.version>
        <springdoc-openapi.version>2.5.0</springdoc-openapi.version>

        <!-- B O M s   u n d   s p e z i f i s c h e   V e r s i o n e n   u e b e r s c h r e i b e n -->
        <allure-bom.version>2.26.0</allure-bom.version>
        <!-- <angus-mail.version>2.0.2</angus-mail.version> -->
        <!-- <assertj.version>3.25.3</assertj.version> -->
        <zipkin-reporter.version>3.4.0</zipkin-reporter.version>
        <brave.version>6.0.3</brave.version>
        <!-- <crac.version>1.4.0</crac.version> -->
        <flyway.version>10.11.0</flyway.version>
        <graphql-java.version>22.0-rc1</graphql-java.version>
        <graphql-java-dataloader.version>3.3.0</graphql-java-dataloader.version>
        <!-- <h2.version>2.2.224</h2.version> -->
        <hibernate.version>6.5.0.CR2</hibernate.version>
        <!-- fuer Annotation Processor -->
        <hibernate-jpamodelgen.version>6.5.0.CR2</hibernate-jpamodelgen.version>
        <!-- <hibernate-validator.version>8.0.1.Final</hibernate-validator.version> -->
        <!-- <hikaricp.version>5.1.0</hikaricp.version> -->
        <!-- <jackson-bom.version>2.17.0</jackson-bom.version> -->
        <!-- <jakarta-persistence.version>3.2.0-M1</jakarta-persistence.version> -->
        <!-- <jakarta-persistence.version>3.1.0</jakarta-persistence.version> -->
        <jakarta-validation.version>3.1.0-M2</jakarta-validation.version>
        <!-- <jakarta-validation.version>3.0.2</jakarta-validation.version> -->
        <!-- <junit-jupiter.version>5.10.2</junit-jupiter.version> -->
        <log4j2.version>3.0.0-beta2</log4j2.version>
        <logback.version>1.5.5</logback.version>
        <!-- fuer Annotation Processor -->
        <!-- https://projectlombok.org/download-edge -->
        <!-- <lombok.version>edge-SNAPSHOT</lombok.version> -->
        <lombok.version>1.18.32</lombok.version>
        <micrometer.version>1.13.0-RC1</micrometer.version>
        <micrometer-tracing.version>1.3.0-RC1</micrometer-tracing.version>
        <!-- <mockito.version>5.11.0</mockito.version> -->
        <mockito-inline.version>5.2.0</mockito-inline.version>
        <!-- <mysql.version>8.3.0</mysql.version> -->
        <netty.version>4.1.109.Final</netty.version>
        <oracle-database.version>23.3.0.23.09</oracle-database.version>
        <!-- <postgresql.version>42.7.3</postgresql.version> -->
        <!-- <prometheus-metrics.version>1.2.1</prometheus-metrics.version> -->
        <reactor-bom.version>2024.0.0-M1</reactor-bom.version>
        <!-- <reactor-bom.version>2023.0.5</reactor-bom.version> -->
        <slf4j.version>2.1.0-alpha1</slf4j.version>
        <!-- <snakeyaml.version>2.2</snakeyaml.version> -->
        <spring-framework.version>6.2.0-M1</spring-framework.version>
        <spring-data.version>2024.0.0-RC1</spring-data.version>
        <spring-graphql.version>1.3.0-RC1</spring-graphql.version>
        <spring-hateoas.version>2.3.0-RC1</spring-hateoas.version>
        <spring-security.version>6.3.0-RC1</spring-security.version>
        <!-- <tomcat.version>11.0.0-M16</tomcat.version> -->
        <!-- <spring-cloud.version>2023.0.1</spring-cloud.version> -->
        <tomcat.version>10.1.20</tomcat.version>

        <!-- T e s t e n -->
        <junit-platform-suite.version>1.10.2</junit-platform-suite.version>

        <!-- C o d e a n a l y s e ,   R e p o r t s ,   D o k u m e n t a t i o n -->
        <allure-junit.version>2.26.0</allure-junit.version>
        <allure-commandline.version>2.26.0</allure-commandline.version>
        <asciidoctorj.version>3.0.0-alpha.2</asciidoctorj.version>
        <asciidoctorj-diagram.version>2.3.0</asciidoctorj-diagram.version>
        <asciidoctorj-pdf.version>2.3.15</asciidoctorj-pdf.version>
        <aspectjweaver.version>1.9.9.1</aspectjweaver.version>
        <checkstyle.version>10.15.0</checkstyle.version>
        <errorprone.version>2.26.1</errorprone.version>
        <jacoco.version>0.8.12</jacoco.version>
        <jruby.version>9.4.6.0</jruby.version>
        <spotbugs.version>4.8.4</spotbugs.version>

        <!-- Plugins -->
        <allure-maven-plugin.version>2.12.0</allure-maven-plugin.version>
        <asciidoctor-maven-plugin.version>3.0.0</asciidoctor-maven-plugin.version>
        <dependency-check-maven.version>9.1.0</dependency-check-maven.version>
        <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>
        <maven-checkstyle-plugin.version>3.3.1</maven-checkstyle-plugin.version>
        <maven-clean-plugin.version>3.3.2</maven-clean-plugin.version>
        <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
        <maven-dependency-plugin>3.6.1</maven-dependency-plugin>
        <maven-enforcer-plugin.version>3.4.1</maven-enforcer-plugin.version>
        <maven-help-plugin.version>3.4.0</maven-help-plugin.version>
        <maven-jar-plugin.version>3.4.0</maven-jar-plugin.version>
        <maven-javadoc-plugin.version>3.6.3</maven-javadoc-plugin.version>
        <maven-jxr-plugin.version>3.3.2</maven-jxr-plugin.version>
        <maven-project-info-reports-plugin.version>3.5.0</maven-project-info-reports-plugin.version>
        <maven-site-plugin.version>3.12.1</maven-site-plugin.version>
        <maven-surefire-plugin.version>3.2.5</maven-surefire-plugin.version>
        <maven-surefire-report-plugin.version>3.2.5</maven-surefire-report-plugin.version>
        <modernizer-maven-plugin.version>2.8.0</modernizer-maven-plugin.version>
        <properties-maven-plugin.version>1.2.1</properties-maven-plugin.version>
        <sonar-maven-plugin.version>3.11.0.3922</sonar-maven-plugin.version>
        <spotbugs-maven-plugin.version>4.8.3.1</spotbugs-maven-plugin.version>
        <spotless.version>2.43.0</spotless.version>
        <!-- <spring-boot-plugin.version>3.3.0-M1</spring-boot-plugin.version> -->
        <surefire-junit-platform>3.2.5</surefire-junit-platform>
        <versions-maven-plugin.version>2.16.2</versions-maven-plugin.version>

        <sonar.organization>Softwarearchitektur und Microservices</sonar.organization>
        <sonar.host.url>http://localhost:9000</sonar.host.url>
        <sonar.scm.disabled>true</sonar.scm.disabled>
        <sonar.exclusions>.allure/**/*,.idea/**/*,.mvn/**/*,config/**/*,extras/**/*,src/test/java/**/*,${project.build.directory}/*,tmp/**/*"</sonar.exclusions>
        <sonar.java.source>21</sonar.java.source>
        <sonar.java.enablePreview>true</sonar.java.enablePreview>
        <!-- <sonar.coverage.jacoco.xmlReportPaths>${project.build.directory}/site/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths> -->
    </properties>

    <pluginRepositories>
        <pluginRepository>
            <id>plugin-repository.spring.milestone</id>
            <url>https://repo.spring.io/milestone</url>
        </pluginRepository>
    </pluginRepositories>

    <repositories>
        <repository>
            <id>spring.milestone</id>
            <name>Spring Milestone Repository</name>
            <url>https://repo.spring.io/milestone</url>
        </repository>

        <!--
        <repository>
            <id>repository.spring.snapshot</id>
            <name>Spring Snapshot Repository</name>
            <url>https://repo.spring.io/snapshot</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
          </repository>
        -->
        <!--
        <repository>
            <id>repository.lombok.snapshot</id>
            <name>Lombok Snapshot Repository</name>
            <url>https://projectlombok.org/edge-releases</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        -->
        <!--
        <repository>
            <id>repository.hibernate.snapshot</id>
            <name>Hibernate Snapshot Repository</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        -->
        <!--
        <repository>
            <id>repository.springdoc.snapshot</id>
            <name>Springdoc Snapshot Repository</name>
            <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        -->
        <!--
        <repository>
            <id>repository.jacoco.snapshot</id>
            <name>JaCoCo Snapshot Repository</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        -->
    </repositories>

    <!-- https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html -->
    <dependencyManagement>
        <dependencies>
            <!--
            -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-bom</artifactId>
                <version>${slf4j.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--
            -->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-bom</artifactId>
                <version>${log4j2.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- https://cyclonedx.org https://github.com/CycloneDX/cyclonedx-maven-plugin -->
            <dependency>
                <groupId>org.cyclonedx</groupId>
                <artifactId>cyclonedx-maven-plugin</artifactId>
                <!-- <version>2.7.11</version> -->
            </dependency>
            <!--
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-bom</artifactId>
                <version>${assertj.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            -->
            <!--
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-bom</artifactId>
                <version>${mockito.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            -->
            <!--
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit-jupiter.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            -->
            <!--
            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>prometheus-metrics-bom</artifactId>
                <version>${prometheus-metrics.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            -->
            <!--
            -->
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-bom</artifactId>
                <version>${micrometer.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--
            -->
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-tracing-bom</artifactId>
                <version>${micrometer-tracing.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--
            -->
            <dependency>
                <groupId>io.zipkin.reporter2</groupId>
                <artifactId>zipkin-reporter-bom</artifactId>
                <version>${zipkin-reporter.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--
            -->
            <dependency>
                <groupId>io.zipkin.brave</groupId>
                <artifactId>brave-bom</artifactId>
                <version>${brave.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--
            <dependency>
                <groupId>com.fasterxml.jackson</groupId>
                <artifactId>jackson-bom</artifactId>
                <version>${jackson-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            -->
            <!--
            -->
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-bom</artifactId>
                <version>${netty.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--
            -->
            <dependency>
                <groupId>io.projectreactor</groupId>
                <artifactId>reactor-bom</artifactId>
                <version>${reactor-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--
            -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-framework-bom</artifactId>
                <version>${spring-framework.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--
            -->
            <dependency>
                <groupId>com.oracle.database.jdbc</groupId>
                <artifactId>ojdbc-bom</artifactId>
                <version>${oracle-database.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--
            -->
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-bom</artifactId>
                <version>${spring-data.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--
            -->
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-bom</artifactId>
                <version>${spring-security.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--
            -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-parent</artifactId>
                <version>${logback.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>${project.parent.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            -->
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi</artifactId>
                <version>${springdoc-openapi.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.qameta.allure</groupId>
                <artifactId>allure-bom</artifactId>
                <version>${allure-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- "Starters" enthalten sinnvolle Abhaengigkeiten, die man i.a. benoetigt -->
        <!-- spring-boot-starter-web verwendet spring-boot-starter, spring-boot-starter-tomcat, spring-boot-starter-json -->
        <!-- spring-boot-starter verwendet spring-boot-starter-logging mit Logback -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.tomcat.embed</groupId>
                    <artifactId>tomcat-embed-websocket</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- HttpGraphQlClient benoetigt WebClient mit Project Reactor -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
        <dependency>
            <groupId>com.graphql-java</groupId>
            <artifactId>java-dataloader</artifactId>
            <version>${graphql-java-dataloader.version}</version>
        </dependency>
        <dependency>
            <groupId>com.graphql-java</groupId>
            <artifactId>graphql-java</artifactId>
            <version>${graphql-java.version}</version>
        </dependency>
        <!--
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-graphql</artifactId>
        </dependency>
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-hateoas</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.oracle.database.jdbc</groupId>
            <artifactId>ojdbc11</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>
        <!-- https://documentation.red-gate.com/flyway/learn-more-about-flyway/system-requirements/supported-databases-for-flyway -->
        <!-- https://documentation.red-gate.com/fd/postgresql-184127604.html -->
        <!-- https://github.com/flyway/flyway/blob/main/flyway-core/src/main/java/org/flywaydb/core/internal/database/DatabaseTypeRegister.java#L99 -->
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-database-postgresql</artifactId>
            <!-- ab Flyway 10 als eigenes Artifakt und nicht mehr Teil von flyway-core -->
            <version>${flyway.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- Flyway unterstuetzt nur Oracle 21 in der lizenzpflichtigen Version: https://documentation.red-gate.com/fd/oracle-184127602.html -->
        <!-- org.flywaydb.core.internal.database.DatabaseTypeRegister.getDatabaseTypeForConnection() -->
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-database-oracle</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!-- https://flywaydb.org/documentation/database/mysql#java-usage -->
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-mysql</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-crypto</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <!--
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-kubernetes-client</artifactId>
        </dependency>
        -->

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
        </dependency>

        <!-- Metriken durch Micrometer und Visualisierung durch Prometheus/Grafana -->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>

        <dependency>
            <groupId>org.fusesource.jansi</groupId>
            <artifactId>jansi</artifactId>
            <version>${jansi.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcpkix-jdk18on</artifactId>
            <version>${bouncycastle.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>${annotations.version}</version>
        </dependency>

        <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-annotations</artifactId>
            <version>${spotbugs.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.gaul</groupId>
            <artifactId>modernizer-maven-annotations</artifactId>
            <version>${modernizer-maven-plugin.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>

        <!-- einschl. JUnit und Mockito -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.skyscreamer</groupId>
                    <artifactId>jsonassert</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.xmlunit</groupId>
                    <artifactId>xmlunit-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.awaitility</groupId>
                    <artifactId>awaitility</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-suite-api</artifactId>
            <version>${junit-platform-suite.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-suite-engine</artifactId>
            <version>${junit-platform-suite.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- mock() fuer record -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <version>${mockito-inline.version}</version>
            <scope>test</scope>
        </dependency>
        <!--
        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>org.jacoco.core</artifactId>
            <version>${jacoco.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>org.jacoco.agent</artifactId>
            <version>${jacoco.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>org.jacoco.report</artifactId>
            <version>${jacoco.version}</version>
            <scope>test</scope>
        </dependency>
        -->
        <!-- TODO Allure
        <dependency>
            <groupId>io.qameta.allure</groupId>
            <artifactId>allure-junit5</artifactId>
            <version>${allure-junit.version}</version>
        </dependency>
        -->
    </dependencies>

    <profiles>
        <!-- Tracing durch Micrometer und Visualisierung durch Zipkin -->
        <profile>
            <id>tracing</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>io.micrometer</groupId>
                    <artifactId>micrometer-tracing-bridge-brave</artifactId>
                </dependency>
                <dependency>
                    <groupId>io.zipkin.reporter2</groupId>
                    <artifactId>zipkin-reporter-brave</artifactId>
                    <scope>runtime</scope>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>docker-compose</id>
            <dependencies>
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-docker-compose</artifactId>
                    <scope>runtime</scope>
                    <optional>true</optional>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>asciidoctor</id>
            <build>
                <plugins>
                    <!-- https://docs.asciidoctor.org/maven-tools/latest/plugin/usage -->
                    <!-- mvn help:describe -D'plugin=org.asciidoctor:asciidoctor-maven-plugin' -Ddetail -->
                    <plugin>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctor-maven-plugin</artifactId>
                        <version>${asciidoctor-maven-plugin.version}</version>

                        <!-- https://github.com/asciidoctor/asciidoctor-maven-examples/blob/main/asciidoc-to-html-example/pom.xml -->
                        <dependencies>
                            <dependency>
                                <groupId>org.jruby</groupId>
                                <artifactId>jruby</artifactId>
                                <version>${jruby.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.asciidoctor</groupId>
                                <artifactId>asciidoctorj</artifactId>
                                <version>${asciidoctorj.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.asciidoctor</groupId>
                                <artifactId>asciidoctorj-diagram</artifactId>
                                <version>${asciidoctorj-diagram.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.asciidoctor</groupId>
                                <artifactId>asciidoctorj-pdf</artifactId>
                                <version>${asciidoctorj-pdf.version}</version>
                            </dependency>
                        </dependencies>

                        <configuration>
                            <sourceDirectory>${basedir}/extras/doc</sourceDirectory>
                            <!-- https://github.com/asciidoctor/asciidoctor-maven-examples/blob/main/asciidoctor-diagram-example/pom.xml -->
                            <requires>
                                <require>asciidoctor-diagram</require>
                            </requires>
                            <attributes>
                                <graphvizdot>C:/Zimmermann/Graphviz/bin/dot.exe</graphvizdot>
                                <attribute-missing>warn</attribute-missing>
                            </attributes>
                            <!-- <outputDirectory>${project.build.directory}/generated-docs</outputDirectory> -->
                            <!-- <enableVerbose>true</enableVerbose> -->
                        </configuration>

                        <executions>
                            <execution>
                                <id>html</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>process-asciidoc</goal>
                                </goals>
                                <configuration>
                                    <!-- <backend>html5</backend> -->
                                    <attributes>
                                        <imagesdir>.</imagesdir>
                                    </attributes>
                                </configuration>
                            </execution>
                            <execution>
                                <id>pdf</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>process-asciidoc</goal>
                                </goals>
                                <configuration>
                                    <backend>pdf</backend>
                                    <attributes>
                                        <imagesdir>.</imagesdir>
                                    </attributes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>

    <build>
        <defaultGoal>compiler:testCompile</defaultGoal>

        <plugins>
            <!-- https://maven.apache.org/plugins/maven-clean-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${maven-clean-plugin.version}</version>
            </plugin>

            <!-- https://maven.apache.org/enforcer/maven-enforcer-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven-enforcer-plugin.version}</version>
                <executions>
                    <execution>
                        <!-- https://dev.to/khmarbaise/maven-plugin-configuration-the-unknown-tiny-details-1emm -->
                        <id>default-cli</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>[21.0.2,22]</version>
                                </requireJavaVersion>
                                <requireMavenVersion>
                                    <version>[3.9.6,4.0)</version>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- https://maven.apache.org/plugins/maven-dependency-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <!-- <goal>sources</goal> -->
                            <goal>resolve</goal>
                        </goals>
                        <!--
                        <configuration>
                            <classifier>sources</classifier>
                        </configuration>
                        -->
                    </execution>
                </executions>
            </plugin>

            <!-- https://maven.apache.org/plugins/maven-compiler-plugin/dependency-info.html -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <showDeprecation>true</showDeprecation>

                    <compilerArgs>
                        <arg>${enable.preview}</arg>
                        <!-- siehe:   javac -\-help-lint -->
                        <arg>-Xlint:all,-serial,-processing,-preview</arg>

                        <arg>-XDcompilePolicy=simple</arg>
                        <!-- https://github.com/google/error-prone/issues/4048#issuecomment-1680735558 -->
                        <arg>
                            -Xplugin:ErrorProne
                            -XepDisableWarningsInGeneratedCode
                            -XepExcludedPaths:.*/generated-sources/.*
                        </arg>

                        <!-- <arg>-Amapstruct.verbose=true</arg> -->
                        <!-- add("-Amapstruct.unmappedTargetPolicy=ERROR") -->
                        <!-- add("-Amapstruct.unmappedSourcePolicy=ERROR") -->
                    </compilerArgs>

                    <annotationProcessorPaths>
                        <path>
                            <!-- https://errorprone.info/docs/installation -->
                            <!-- https://errorprone.info/docs/flags -->
                            <!-- https://uber.github.io/AutoDispose/error-prone -->
                            <groupId>com.google.errorprone</groupId>
                            <artifactId>error_prone_core</artifactId>
                            <version>${errorprone.version}</version>
                        </path>

                        <!-- siehe ${project.build.directory}/generated-sources/annotations -->
                        <!-- https://docs.jboss.org/hibernate/orm/current/userguide/html_single/Hibernate_User_Guide.html#tooling-modelgen -->
                        <!-- https://docs.jboss.org/hibernate/orm/current/introduction/html_single/Hibernate_Introduction.html#generator -->
                        <!-- build\generated\sources\annotationProcessor\java\main\com.acme.kunde\entity\Kunde_.java -->
                        <path>
                            <groupId>org.hibernate.orm</groupId>
                            <artifactId>hibernate-jpamodelgen</artifactId>
                            <version>${hibernate-jpamodelgen.version}</version>
                        </path>

                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>

                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>

                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok-mapstruct-binding</artifactId>
                            <version>${lombok-mapstruct-binding.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
                <configuration>
                    <excludes>
                        <!-- in src/main/resources/ -->
                        <exclude>private-key.pem</exclude>
                        <exclude>certificate.crt</exclude>
                        <exclude>.reloadtrigger</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- https://docs.spring.io/spring-boot/docs/current/maven-plugin/reference/htmlsingle -->
            <!-- https://docs.spring.io/spring-boot/docs/current/maven-plugin/reference/htmlsingle/#using -->
            <!-- https://docs.spring.io/spring-boot/docs/current/maven-plugin/reference/htmlsingle/#packaging -->
            <!-- mvn help:describe -D'plugin=org.springframework.boot:spring-boot-maven-plugin' -Ddetail -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <!-- <version>${spring-boot-plugin.version}</version> -->
                <configuration>
                    <systemPropertyVariables>
                        <spring.profiles.active>dev</spring.profiles.active>
                        <logging.file.name>${project.build.directory}/log/application.log</logging.file.name>
                    </systemPropertyVariables>

                    <!-- https://docs.spring.io/spring-boot/docs/current/maven-plugin/reference/htmlsingle/#build-image.customization -->
                    <image>
                        <name>${image.name}</name>

                        <!-- statt "created xx years ago": https://medium.com/buildpacks/time-travel-with-pack-e0efd8bf05db -->
                        <createdDate>now</createdDate>

                        <env>
                            <!-- https://docs.spring.io/spring-boot/docs/current/maven-plugin/reference/htmlsingle/#build-image.customization -->
                            <!-- https://github.com/paketo-buildpacks/bellsoft-liberica#configuration -->
                            <!-- https://github.com/paketo-buildpacks/bellsoft-liberica/blob/main/buildpack.toml: Umgebungsvariable und Ubuntu Jammy -->
                            <!-- https://releases.ubuntu.com: Jammy = 22.04 -->
                            <!-- https://github.com/paketo-buildpacks/bellsoft-liberica/releases -->
                            <BP_JVM_VERSION>${java.version}</BP_JVM_VERSION>
                            <!-- BPL = Build Packs Launch -->
                            <BPL_JVM_THREAD_COUNT>20</BPL_JVM_THREAD_COUNT>
                            <!-- https://docs.spring.io/spring-boot/docs/current/maven-plugin/reference/htmlsingle/#build-image.examples.runtime-jvm-configuration -->
                            <BPE_DELIM_JAVA_TOOL_OPTIONS xml:space="preserve"> </BPE_DELIM_JAVA_TOOL_OPTIONS>
                            <BPE_APPEND_JAVA_TOOL_OPTIONS>${enable.preview}</BPE_APPEND_JAVA_TOOL_OPTIONS>
                        </env>

                        <!-- https://paketo.io/docs/howto/java/#use-an-alternative-jvm -->

                        <!-- Azul Zulu: JRE 8, 11, 17 (default, siehe buildpack.toml), 21 -->
                        <!-- https://github.com/paketo-buildpacks/azul-zulu/releases -->
                        <!--
                        <buildpacks>
                            <buildpack>paketobuildpacks/azul-zulu</buildpack>
                            <buildpack>paketobuildpacks/java</buildpack>
                        </buildpacks>
                        -->

                        <!-- Eclipse Temurin: JRE 8, 11, 17 (default, siehe buildpack.toml), 21 -->
                        <!-- https://github.com/paketo-buildpacks/adoptium/releases -->
                        <!--
                        <buildpacks>
                            <buildpack>paketo-buildpacks/adoptium</buildpack>
                            <buildpack>paketobuildpacks/java</buildpack>
                        </buildpacks>
                        -->

                        <!-- SapMachine: JRE 11, 17 (default, siehe buildpack.toml), 21 -->
                        <!-- https://github.com/paketo-buildpacks/sap-machine/releases -->
                        <!--
                        <buildpacks>
                            <buildpack>paketo-buildpacks/sap-machine</buildpack>
                            <buildpack>paketobuildpacks/java</buildpack>
                        </buildpacks>
                        -->
                    </image>
                </configuration>

                <executions>
                    <execution>
                        <id>default-repackage</id>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-build-image</id>
                        <goals>
                            <goal>build-image</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- https://maven.apache.org/surefire/maven-surefire-plugin -->
            <!-- Maven Failsafe Plugin hat pre-integration-test und post-integration-test: unnoetig wegen Spring Test -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit-platform</artifactId>
                        <version>${surefire-junit-platform}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <properties>
                        <!-- TODO Allure
                        <property>
                            <name>listener</name>
                            <value>io.qameta.allure.junit5.AllureJunit5</value>
                        </property>
                        -->
                    </properties>
                    <argLine>@{argLine} ${enable.preview}</argLine>
                    <systemPropertyVariables>
                        <spring.profiles.active>dev</spring.profiles.active>
                        <logging.file.name>${project.build.directory}/log/application.log</logging.file.name>
                        <logging.level.com.acme>${log-level-test}</logging.level.com.acme>
                        <logging.level.org.springframework.web.reactive.function.client.ExchangeFunctions>${log-level-test}</logging.level.org.springframework.web.reactive.function.client.ExchangeFunctions>
                        <logging.level.org.springframework.web.service.invoker.PathVariableArgumentResolver>${log-level-test}</logging.level.org.springframework.web.service.invoker.PathVariableArgumentResolver>
                        <logging.level.org.springframework.web.service.invoker.RequestHeaderArgumentResolver>${log-level-test}</logging.level.org.springframework.web.service.invoker.RequestHeaderArgumentResolver>
                        <logging.level.org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor>${log-level-test}</logging.level.org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor>
                        <logging.level.org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping>${log-level-test}</logging.level.org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping>
                        <logging.level.org.hibernate.SQL>${log-level-test}</logging.level.org.hibernate.SQL>

                        <!-- <groups>integration | unit</groups> -->
                        <!-- <groups>integration</groups> -->
                        <!-- <groups>rest</groups> -->
                        <!-- <groups>rest-get</groups> -->
                        <!-- <groups>rest-write</groups> -->
                        <!-- <groups>graphql</groups> -->
                        <!-- <groups>query</groups> -->
                        <!-- <groups>mutation</groups> -->
                        <!-- <groups>unit</groups> -->
                        <!-- <groups>service-read</groups> -->
                        <!-- <groups>service-write</groups> -->
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${maven-surefire-report-plugin.version}</version>
            </plugin>

            <!-- https://www.eclemma.org/jacoco/trunk/doc/maven.html -->
            <!-- https://www.eclemma.org/jacoco/trunk/doc/examples/build/pom.xml -->
            <!-- mvn help:describe -D'plugin=org.jacoco:jacoco-maven-plugin' -Ddetail -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <configuration>
                    <excludes>
                        <exclude>com/acme/entity/*_.class</exclude>
                    </excludes>
                </configuration>

                <executions>
                    <!-- https://www.eclemma.org/jacoco/trunk/doc/prepare-agent-mojo.html -->
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>generate-code-coverage-report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <formats>XML,HTML</formats>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- mvn allure:help -Ddetail -->
            <!-- mvn help:describe -D'plugin=io.qameta.allure:allure-maven' -Ddetail -->
            <!-- TODO Allure
            <plugin>
                <groupId>io.qameta.allure</groupId>
                <artifactId>allure-maven</artifactId>
                <version>${allure-maven-plugin.version}</version>
                <configuration>
                    <reportVersion>${allure-junit.version}</reportVersion>
                </configuration>
            </plugin>
            -->

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>${properties-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <configuration>
                            <files>
                                <file>config/maven.properties</file>
                            </files>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- https://maven.apache.org/plugins/maven-checkstyle-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <configuration>
                    <!-- https://maven.apache.org/plugins/maven-checkstyle-plugin/examples/custom-checker-config.html -->
                    <configLocation>config/checkstyle/checkstyle.xml</configLocation>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>${checkstyle.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- https://spotbugs.github.io/spotbugs-maven-plugin -->
            <!-- mvn help:describe -D'plugin=com.github.spotbugs:spotbugs-maven-plugin' -Ddetail -->
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${spotbugs-maven-plugin.version}</version>
                <configuration>
                    <excludeFilterFile>config/spotbugs/exclude.xml</excludeFilterFile>
                </configuration>
            </plugin>

            <!-- https://github.com/diffplug/spotless -->
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <version>${spotless.version}</version>
            </plugin>

            <!-- https://github.com/gaul/modernizer-maven-plugin -->
            <plugin>
                <groupId>org.gaul</groupId>
                <artifactId>modernizer-maven-plugin</artifactId>
                <version>${modernizer-maven-plugin.version}</version>
                <configuration>
                    <javaVersion>${java.version}</javaVersion>
                </configuration>
                <executions>
                    <execution>
                        <id>modernizer</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>modernizer</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- mvn help:describe -D'plugin=org.sonarsource.scanner.maven:sonar-maven-plugin' -Ddetail -->
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>${sonar-maven-plugin.version}</version>
            </plugin>

            <!-- https://jeremylong.github.io/DependencyCheck/dependency-check-maven -->
            <!-- mvn help:describe -D'plugin=org.owasp:dependency-check-maven' -Ddetail -->
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>${dependency-check-maven.version}</version>
                <configuration>
                    <nvdApiKey>${nvd.api.key}</nvdApiKey>
                    <!-- <nvdApiDelay>5000</nvdApiDelay> -->
                    <!-- <nvdMaxRetryCount>20</nvdMaxRetryCount> -->
                    <dataDirectory>C:/Zimmermann/dependency-check-data</dataDirectory>
                    <suppressionFiles>config/dependencycheck/suppression.xml</suppressionFiles>
                    <archiveAnalyzerEnabled>false</archiveAnalyzerEnabled>
                    <assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
                    <autoconfAnalyzerEnabled>false</autoconfAnalyzerEnabled>
                    <bundleAuditAnalyzerEnabled>false</bundleAuditAnalyzerEnabled>
                    <cmakeAnalyzerEnabled>false</cmakeAnalyzerEnabled>
                    <cocoapodsAnalyzerEnabled>false</cocoapodsAnalyzerEnabled>
                    <composerAnalyzerEnabled>false</composerAnalyzerEnabled>
                    <cpanfileAnalyzerEnabled>false</cpanfileAnalyzerEnabled>
                    <dartAnalyzerEnabled>false</dartAnalyzerEnabled>
                    <golangDepEnabled>false</golangDepEnabled>
                    <golangModEnabled>false</golangModEnabled>
                    <msbuildAnalyzerEnabled>false</msbuildAnalyzerEnabled>
                    <nodeAnalyzerEnabled>false</nodeAnalyzerEnabled>
                    <nodeAuditAnalyzerEnabled>false</nodeAuditAnalyzerEnabled>
                    <nugetconfAnalyzerEnabled>false</nugetconfAnalyzerEnabled>
                    <nuspecAnalyzerEnabled>false</nuspecAnalyzerEnabled>
                    <pyDistributionAnalyzerEnabled>false</pyDistributionAnalyzerEnabled>
                    <pyPackageAnalyzerEnabled>false</pyPackageAnalyzerEnabled>
                    <retireJsAnalyzerEnabled>false</retireJsAnalyzerEnabled>
                    <rubygemsAnalyzerEnabled>false</rubygemsAnalyzerEnabled>
                    <swiftPackageManagerAnalyzerEnabled>false</swiftPackageManagerAnalyzerEnabled>
                    <swiftPackageResolvedAnalyzerEnabled>false</swiftPackageResolvedAnalyzerEnabled>
                </configuration>

                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- https://maven.apache.org/plugins/maven-javadoc-plugin -->
            <!-- https://maven.apache.org/plugins/maven-javadoc-plugin/javadoc-mojo.html -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin.version}</version>
                <configuration>
                    <additionalOptions>${enable.preview}</additionalOptions>
                    <show>package</show>
                    <sourcepath>src/main/java;target/generated-sources/annotations</sourcepath>
                    <bottom><![CDATA[Copyright &#169; {currentYear} {organizationName}. All rights reserved.]]></bottom>
                </configuration>
            </plugin>

            <!-- https://maven.apache.org/plugins/maven-project-info-reports-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${maven-project-info-reports-plugin.version}</version>
            </plugin>

            <!-- https://maven.apache.org/plugins/maven-site-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>${maven-site-plugin.version}</version>
            </plugin>

            <!-- https://www.mojohaus.org/versions/versions-maven-plugin -->
            <!-- mvn help:describe -D'plugin=org.codehaus.mojo:versions-maven-plugin' -Ddetail -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>${versions-maven-plugin.version}</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-help-plugin</artifactId>
                <version>${maven-help-plugin.version}</version>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <!-- https://maven.apache.org/plugins/maven-site-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
            </plugin>

            <!-- https://www.eclemma.org/jacoco/trunk/doc/maven.html -->
            <!-- mvn help:describe -D'plugin=org.jacoco:jacoco-maven-plugin' -Ddetail -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>com/acme/entity/*_.class</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- https://maven.apache.org/plugins/maven-checkstyle-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <configuration>
                    <configLocation>config/checkstyle/checkstyle.xml</configLocation>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>checkstyle</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

            <!-- fuer Checkstyle: "Source XRef to link to" -->
            <!-- https://maven.apache.org/jxr/maven-jxr-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>${maven-jxr-plugin.version}</version>
            </plugin>

            <!-- https://spotbugs.github.io/spotbugs-maven-plugin -->
            <!-- mvn help:describe -D'plugin=com.github.spotbugs:spotbugs-maven-plugin' -Ddetail -->
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <configuration>
                    <excludeFilterFile>config/spotbugs/exclude.xml</excludeFilterFile>
                </configuration>
            </plugin>

            <!-- https://github.com/diffplug/spotless -->
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
            </plugin>

            <!-- https://jeremylong.github.io/DependencyCheck/dependency-check-maven/ -->
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <configuration>
                    <nvdApiKey>${nvd.api.key}</nvdApiKey>
                    <dataDirectory>C:/Zimmermann/dependency-check-data</dataDirectory>
                    <suppressionFiles>config/dependencycheck/suppression.xml</suppressionFiles>
                    <archiveAnalyzerEnabled>false</archiveAnalyzerEnabled>
                    <assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
                    <autoconfAnalyzerEnabled>false</autoconfAnalyzerEnabled>
                    <bundleAuditAnalyzerEnabled>false</bundleAuditAnalyzerEnabled>
                    <cmakeAnalyzerEnabled>false</cmakeAnalyzerEnabled>
                    <cocoapodsAnalyzerEnabled>false</cocoapodsAnalyzerEnabled>
                    <composerAnalyzerEnabled>false</composerAnalyzerEnabled>
                    <cpanfileAnalyzerEnabled>false</cpanfileAnalyzerEnabled>
                    <dartAnalyzerEnabled>false</dartAnalyzerEnabled>
                    <golangDepEnabled>false</golangDepEnabled>
                    <golangModEnabled>false</golangModEnabled>
                    <msbuildAnalyzerEnabled>false</msbuildAnalyzerEnabled>
                    <nodeAnalyzerEnabled>false</nodeAnalyzerEnabled>
                    <nodeAuditAnalyzerEnabled>false</nodeAuditAnalyzerEnabled>
                    <nugetconfAnalyzerEnabled>false</nugetconfAnalyzerEnabled>
                    <nuspecAnalyzerEnabled>false</nuspecAnalyzerEnabled>
                    <pyDistributionAnalyzerEnabled>false</pyDistributionAnalyzerEnabled>
                    <pyPackageAnalyzerEnabled>false</pyPackageAnalyzerEnabled>
                    <retireJsAnalyzerEnabled>false</retireJsAnalyzerEnabled>
                    <rubygemsAnalyzerEnabled>false</rubygemsAnalyzerEnabled>
                    <swiftPackageManagerAnalyzerEnabled>false</swiftPackageManagerAnalyzerEnabled>
                    <swiftPackageResolvedAnalyzerEnabled>false</swiftPackageResolvedAnalyzerEnabled>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>aggregate</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

            <!--
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
            </plugin>
            -->

            <!-- https://maven.apache.org/plugins/maven-javadoc-plugin -->
            <!-- https://maven.apache.org/plugins/maven-javadoc-plugin/javadoc-mojo.html -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <additionalOptions>${enable.preview}</additionalOptions>
                    <show>package</show>
                    <sourcepath>src/main/java;target/generated-sources/annotations</sourcepath>
                </configuration>
            </plugin>

            <!-- https://maven.apache.org/plugins/maven-project-info-reports-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>licenses</report>
                            <report>team</report>
                            <report>scm</report>
                            <report>dependencies</report>
                            <!-- <report>dependency-management</report> -->
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>
</project>
